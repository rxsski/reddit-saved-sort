/*
  router.get('/auth', function(req, res, next) {
    req.app.locals.appState = require('randomstring').generate(10);
    res.redirect(`https://www.reddit.com/api/v1/authorize?client_id=${settings.appClientId}&response_type=code&state=${req.app.locals.appState}&redirect_uri=${settings.appRedirectUri}&duration=${settings.appDuration}&scope=${settings.appScope}`);
  });

    router.get('/auth2', function(req, res, next) {
        if (Object.keys(req.query).length === 0 && req.query.constructor === Object) {
            console.log('no');
            // Add error page render here later
        } else {
            if (req.app.locals.appState === req.query.state) {
                //good
                var codeToken = {
                    'grant_type' : 'authorization_code',
                    'code' : req.query.code,
                    'redirect_uri' : settings.appRedirectUri
                }
                var options = {
                    uri : 'https://www.reddit.com/api/v1/access_token',
                    method : 'POST',
                    form : codeToken,
                    auth : {
                        user : settings.appClientId,
                        pass : settings.appSecret
                    },
                    json : true
                }
                
                console.log("IM HERE");

                request(options, function(error, response, body) {
                    if (!error && response.statusCode == 200) {
                        console.log("IM IN HERE");
                        console.log(body)
                        
                        console.log(body.access_token);
                        
                        var newOptions = {
                            uri : 'https://oauth.reddit.com/user/rxsski/saved',
                            method : 'GET',
                            headers : {
                            'Authorization': `bearer ${body.access_token}`,
                            'User-Agent': settings.appUserAgent
                            }
                        }

                        request(newOptions, function(error, response2, body2) {

                            //newBody.data = list of objects (kind, data)
                            //newBody.data.children array of objects (kind, data (obj))
                            console.log('response here---------');
                            var newBody = JSON.parse(body2);
                            res.send(newBody.data.children[0]);
                        });
                    } else {
                        console.log("ERR HERE");
                        console.log(error);
                    }
                    console.log('end');
                });
                console.log('message beginning');
            } else {
                //error render, state not adding up
            }
        }
    });

    */